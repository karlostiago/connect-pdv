buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:3.2.4")
	}
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.connect-pdv'
	version = 'SNAPSHOT'
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}
}

/*
 *  Build the application individually just with the gradle faturamento:build command
 */
project(":faturamento") {
	dependencies {
		compileOnly project(":commons")
	}
}

/*
 *	Build the application individually just with the gradle pdv:build command
 */
project(":pdv") {
	dependencies {
		compileOnly project(":commons")
	}
}

/*
 *	Build the application individually just with the gradle cadastro:build command
 */
project(":cadastro") {
	dependencies {
		compileOnly project(":commons")
	}
}

/*
 *	Build the application individually just with the gradle fiscal:build command
 */
project(":fiscal") {
	dependencies {
		compileOnly project(":commons")
	}
}

/*
 *  Build the application individually just with the gradle compras:build command
 */
project(":compras") {
	dependencies {
		compileOnly project(":commons")
	}
}

/*
 * If you wanted to build the entire application, use gradle :buildAll at the moment the web project was ignored because it was angular
 * I didn't think it was necessary to include it in the application build at the moment, but there will probably be an update to manage the project
 * web, frontend.
 */
tasks.register('buildAll') {
	dependsOn {
		subprojects.findAll { it.name != 'web' }.collect { it.tasks.named('build') }
	}
}
